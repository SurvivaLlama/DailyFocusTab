/* --- Variables (Custom Properties) --- */
:root {
  --primary-color: #FF69B4; /* Hot Pink */
  --secondary-color: #FFB7B7; /* Light Pink */
  --accent-color: #f7b731; /* Yellow */
  --background-light: #fafafa;
  --background-dark: #1a1a1a;
  --background-dark-secondary: #2d51a3;
  --text-light: #333;
  --text-dark: #fff;
  --container-bg-light: rgba(255, 255, 255, 0.9);
  --container-bg-dark: #2d2d2d;
  --shadow-color: rgba(31, 38, 135, 0.37);
  --shadow-color-dark: rgba(255, 255, 255, 0.1);
  --input-border-light: #FFB7B7;
  --input-border-dark: #4d4d4d;
  --input-bg-dark: #3d3d3d;
  --button-gradient-start: #FF69B4;
  --button-gradient-end: #FFB7B7;
  --button-complete-gradient-start: #ff6b6b;
  --button-complete-gradient-end: #ff8e8e;
  --switch-bg: #ccc;
  --switch-checked-bg: #4CAF50;

  /* Font Variables */
  --font-family-primary: 'Nunito', sans-serif; /* Consistent with HTML */
  --font-family-secondary: 'Quicksand', sans-serif; /* For buttons/inputs */
  --font-size-base: 16px;
  --font-size-heading: 1.75rem; /* 28px equivalent */
  --font-size-focus-text: 2em;
  --font-size-anime-text: 1.4em;
  --font-size-github-text: 1.2em;

    /* Transition Speeds */
  --transition-fast: 0.2s;
  --transition-normal: 0.3s;
  --transition-slow: 0.4s;
}

/* --- Reset/Normalize (Simplified) --- */
*, *::before, *::after {
  box-sizing: border-box;
}

html, body {
  height: 100%; /* Use 100% instead of 100vh for better compatibility */
  margin: 0;
  padding: 0;
}

/* --- Base Styles --- */
body {
  display: flex;
  justify-content: center;
  align-items: center;
  font-family: var(--font-family-primary);
  font-size: var(--font-size-base);
  background: linear-gradient(135deg, var(--background-light) 0%, var(--accent-color) 100%);
  color: var(--text-light);
  transition: background var(--transition-normal), color var(--transition-normal);
  overflow: hidden; /* Prevent scrollbars caused by animations */
}

/* --- Dark Mode --- */
body.dark-mode {
  background: linear-gradient(135deg, var(--background-dark) 0%, var(--background-dark-secondary) 100%) !important;
  color: var(--text-dark);
}

body.dark-mode #focusContainer {
  background-color: var(--container-bg-dark);
  box-shadow: 0 4px 8px 0 var(--shadow-color-dark);
}

body.dark-mode #newFocusInput {
  background-color: var(--input-bg-dark);
  color: var(--text-dark);
  border-color: var(--input-border-dark);
}
/* --- Utility Classes*/
.sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
}

/* --- Container --- */
#focusContainer {
  background: var(--container-bg-light);
  backdrop-filter: blur(10px); /* Consistent blur */
  border-radius: 16px;
  box-shadow: 0 8px 32px 0 var(--shadow-color);
  border: 1px solid rgba(255, 255, 255, 0.18); /* Consistent border */
  width: 90%;
  max-width: 600px;
  padding: 30px;
  margin: 20px auto;  /* Added margin for spacing */
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
  transition: background-color var(--transition-normal), box-shadow var(--transition-normal), transform var(--transition-normal);
}
#focusContainer:hover{
    transform: scale(1.02);
}


/* --- Headings --- */
h1 {
    color: var(--primary-color);
    font-size: var(--font-size-heading);
    margin-bottom: 20px;
    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1);
    letter-spacing: 1px;
    display: none; /* Added since it's visually hidden */
}

/* --- Focus Text --- */
#focusText {
  color: var(--primary-color);
  font-size: clamp(1.5rem, 5vw, 2.5rem);
  background: linear-gradient(45deg, var(--primary-color), var(--secondary-color));
  -webkit-background-clip: text;
  background-clip: text;
  -webkit-text-fill-color: transparent;
  margin: 20px 0;
  font-weight: 700;
  letter-spacing: 1px;
  text-shadow: 2px 2px 4px rgba(255, 105, 180, 0.3);
  animation: pulse 2s infinite; /* Keep pulse animation */
}

@keyframes pulse {
  0% { transform: scale(1); }
  50% { transform: scale(1.05); }
  100% { transform: scale(1); }
}


/* --- Input Field --- */
#newFocusInput {
  width: 100%;
  padding: 15px;
  margin-bottom: 20px;
  border: 2px solid var(--input-border-light);
  border-radius: 12px;
  box-sizing: border-box;
  font-family: var(--font-family-secondary); /* Use secondary font */
  font-size: var(--font-size-base);
  background: rgba(255, 255, 255, 0.9);
  transition: border-color var(--transition-normal), box-shadow var(--transition-normal);
}

#newFocusInput:focus {
  outline: none;
  border-color: var(--primary-color);
  box-shadow: 0 0 15px rgba(255, 105, 180, 0.3);
}

/* --- Buttons --- */
#setFocusButton,
.complete-button {
  width: 100%;
  padding: 15px 25px;
  margin: 8px 0; /* Consistent margin */
  border: none;
  border-radius: 12px;
  cursor: pointer;
  font-family: var(--font-family-secondary); /* Use secondary font */
  font-weight: 600;
  font-size: var(--font-size-base);
  letter-spacing: 1px;
  transition: transform var(--transition-fast), box-shadow var(--transition-fast), background-color var(--transition-fast);
  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.2); /* Consistent text shadow */
}

#setFocusButton {
    display: block; /* Set focus button should be displayed. */
    background: linear-gradient(45deg, var(--button-gradient-start), var(--button-gradient-end));
    color: white;
}

#setFocusButton:hover {
  transform: translateY(-2px);
  box-shadow: 0 5px 15px rgba(255, 105, 180, 0.4);
}

.complete-button {
  background: linear-gradient(45deg, var(--button-complete-gradient-start), var(--button-complete-gradient-end));
  color: white;
  margin-left: 0; /* Reset margin-left */
  width: auto;   /* Let width be determined by content */
  transform-style: preserve-3d; /* For 3D effect */
}

.complete-button:hover {
  transform: translateY(-3px) scale(1.05);
  box-shadow: 0 5px 15px rgba(255, 107, 107, 0.4);
}

.complete-button:active {
  transform: translateY(0) scale(0.98); /* Consistent active state */
}
/* --- Checkbox (Hidden, styled via complete-button) --- */
#focusCheckbox{
    display: none;
}

/* --- Active/Set Focus Areas --- */
#focusArea {
  width: 100%;
  margin-bottom: 20px;
}

#activeFocusArea {
  display: flex;
  align-items: center;
  justify-content: space-between; /* Space out text and button */
  gap: 10px; /* Consistent gap */
  width: 100%;
}


#setFocusArea {
  text-align: center;
}

/* --- Switch (Dark Mode Toggle) --- */
.dark-mode-toggle-container{
    position: fixed;
    top: 20px;
    right: 20px;
}
.switch {
  position: relative;  /* Change to relative */
  display: inline-block; /* Important for positioning */
  width: 60px;
  height: 34px;
}

.switch input {
  opacity: 0;
  width: 0;
  height: 0;
}

.slider {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: var(--switch-bg);
  transition: var(--transition-slow);
}

.slider:before {
  position: absolute;
  content: "";
  height: 26px;
  width: 26px;
  left: 4px;
  bottom: 4px;
  background-color: white;
  transition: var(--transition-slow);
}

input:checked + .slider {
  background-color: var(--switch-checked-bg);
}

input:checked + .slider:before {
  transform: translateX(26px);
}

.slider.round {
  border-radius: 34px;
}

.slider.round:before {
  border-radius: 50%;
}

/* --- GitHub Link --- */
.github-footer{
    position: fixed;
    bottom: 20px;
    right: 20px;
}
.github-text {
  color: var(--primary-color);
  text-decoration: none;
  font-weight: bold;
  font-size: var(--font-size-github-text);
  text-shadow: 2px 2px 4px rgba(255, 105, 180, 0.3);
  transition: color var(--transition-normal), transform var(--transition-normal), text-shadow var(--transition-normal);
}

.github-text:hover {
  color: var(--secondary-color);
  transform: scale(1.1);
  text-shadow: 0 0 10px rgba(255, 105, 180, 0.5);
}

/* --- Anime Text --- */
.anime-text {
  font-size: var(--font-size-anime-text);
  color: var(--primary-color);
  text-shadow: 2px 2px 4px rgba(255, 105, 180, 0.3);
  font-weight: bold;
  letter-spacing: 1px;
  animation: float 3s ease-in-out infinite; /* Keep float animation */
}

@keyframes float {
  0%, 100% { transform: translateY(0) rotate(-1deg); }
  50% { transform: translateY(-10px) rotate(1deg); }
}

/* --- Fireworks (Placeholder, needs more work) --- */
.pyro {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 999;
  pointer-events: none; /* Allows clicks to pass through */
}

.pyro > .before, .pyro > .after {
    position: absolute;
    width: 5px;
    height: 5px;
    border-radius: 50%;
    box-shadow: 0 0 #fff; /* this needs more work */
    animation:
        1s bang ease-out infinite backwards,
        1s gravity ease-in infinite backwards,
        5s position linear infinite backwards;
}

/* Needs more complex keyframes for a better effect */
@keyframes bang {
  to {
    box-shadow: -70px -115.67px #00ff73, -28px -99.67px #ff00c8;
  }
}

@keyframes gravity {
 to {
      transform: translateY(200px);
      opacity: 0;
  }
}

@keyframes position {
  0%, 19.9% { margin-top: 10%; margin-left: 40%; }
  20%, 39.9% { margin-top: 40%; margin-left: 30%; }
  40%, 59.9% { margin-top: 20%; margin-left: 70%; }
  60%, 79.9% { margin-top: 30%; margin-left: 20%; }
  80%, 99.9% { margin-top: 30%; margin-left: 80%; }
}

.pyro > .after {
    animation-delay: 1.25s, 1.25s, 1.25s;
    animation-duration: 1.25s, 1.25s, 6.25s;
}

/* --- Media Queries --- */
@media screen and (max-width: 600px) {
  body {
    padding: 10px; /* Add padding on smaller screens */
  }

  #focusContainer {
    width: 95%;
    margin: 10px auto;
    padding: 15px;
  }

  #focusText {
    font-size: 1.6em;
  }

  .anime-text {
    font-size: 1.2em;
  }
    .dark-mode-toggle-container{
        top: 10px;
        right: 10px;
    }
  .github-footer {
    bottom: 10px;
    right: 10px;
    font-size: 1em;
  }

  #newFocusInput {
    width: 100%;  /* Input takes full width */
    font-size: var(--font-size-base);
    padding: 12px;
  }
  .complete-button {
    padding: 8px 16px; /* Smaller padding on smaller screens */
    font-size: 14px;
  }

}
